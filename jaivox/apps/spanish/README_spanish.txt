
Jaivox Spanish example
======================

Jaivox dialogs can be created in any language. This process is illustrated
here in an example using Spanish.

Here we modify the test example to Spanish.

The test example is created using

	com.jaivox.tools.Jvgen test/test.conf

The file test.conf refers to various other files

	road.txt		some data about roads
	road.dlg		the dialog model, which includes errors.dlg
	road.spec		data specs that describe the data and values for grammar tags
	common_en.txt	a list of common words in English
	penn.txt		a list of common grammar tags (like NN means "noun")

Corresponding to these, the Spanish example translates some of the above
files. We did not change road.txt.

	road_es.dlg		Spanish dialog model, includes Spanish errors_es.dlg
	road_es.spec	data specs and grammar tags in Spanish
	common_es.dlg	common words in Spanish

These are referenced in a configuration file spanish.conf.

(You do not need to generate the files since they are already generated.
But if you want to reate the Spanish example, the first step is to create
the program using
	com.jaivox.tools.Jvgen spanish/spanish.conf
This creates the spanish/es directory.)

We have modified the programs in spanish/es to create spanish/es_saved.
In the following, assume you are working in the es_saved directory.

Some further modifications of the files here is necessary because we need
to use a different audio model for Spanish.

We are using

	voxforge-es-0.1.1

which can be downloaded from various places. To follow the arrangement
we have used for the WSJ audio model, we organize some of the files here
a bit differently.

Some information about using this model can be found at

http://cmusphinx.sourceforge.net/sphinx4/doc/UsingSphinxTrainModels.html

First of all we place the audio model

	voxforge_es_sphinx.cd_cont_1500

in our classpath. This audio model is contained in the voxforge download.
This directory is contained in the voxforge-es-0.1.1/model_parameters
directory.

We add the dictionary voxforge_es_sphinx.dic contained originally in
voxforge-es-0.1.1/etc to a directory voxforge_es_sphinx.cd_cont_1500/dict
to be consistent with the WSJ model's arrangement.

We modify live.xml generated by Jvgen to create live_es.xml that refers to
the dictionary and other parameters corresponding to the Spanish audio
model. A diff output shows the places that are changed. In the pairs
of lines shown below, the first line is for the English examples while
the second line shows the corresponding line the Sphinx configuration
file (like live.xml) for the Spanish example.
------------
<property name="acousticModel" value="wsj"/>
<property name="acousticModel" value="voxforge"/>

value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/dict/cmudict.0.6d"/>
value="resource:/voxforge_es_sphinx.cd_cont_1500/dict/voxforge_es_sphinx.dic"/>

value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/noisedict"/>
value="resource:/voxforge_es_sphinx.cd_cont_1500/noisedict"/>

<component name="wsj"
<component name="voxforge"

<property name="loader" value="wsjLoader"/>
<property name="loader" value="voxforgeLoader"/>

<component name="wsjLoader" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
<component name="voxforgeLoader" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">

<property name="location" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz"/>
<property name="location" value="resource:/voxforge_es_sphinx.cd_cont_1500"/>
--------

There are some other modifications that you need to make. In particular,
the loader has to be configured to the use the model created by voxforge.
We did the following for the loader:

    <component name="voxforgeLoader" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
        <property name="logMath" value="logMath"/>
        <property name="unitManager" value="unitManager"/>
		<property name="vectorLength" value="13"/>
        <property name="location" value="resource:/voxforge_es_sphinx.cd_cont_1500"/>
    </component>

Note the vectorLength parameter. Without this setting, Sphinx gets an exception.

Corresponding to the use of live_es.xml, liveTest.java is modified to use
this xml file instead of live.xml.

We have included the language model here, but if you want to create it
yourself, you can run

sh lmgen.sh

(assuming you have all the components needed for the language model and
sphinxbase.)

To compile live.java
sh complive.sh

To run the program
sh runlive.sh

There are a few problems that need to be solved at this point.

1.  The Spanish dictionary does not contain many of the words used in the
	dialogs. These include simple words as well as foreign words like the
	street names.

2.	We are using freeTTS for synthesizing the answers. However freetts does
	not come with a Spanish voice. Even festival, as it is released now,
	does not come with a Spanish voice, though it is possible to get an old
	version of a Castillian Spanish speaker's voice for festival. We will
	have more on this later.

3.	The example here has to be adapted to use the data properly, the same
	way that the test example was adapted to in the "1st" example.


